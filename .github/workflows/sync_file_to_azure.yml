# This is a basic workflow to help you get started with Actions
name: update virtio-win-latest.iso

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
    paths:
      - ".github/workflows/sync_virtio_iso.yml"
  #schedule:
  #  - cron: "35 17 * * *"
  #crontab不生效？？？
  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    #container: multiarch/qemu-user-static:x86_64-aarch64
    #env:
    #REPO: ${{ secrets.DEBUG_REPO }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2

      - name: set environment
        run: |
          printf "%s\n" "DEBIAN_FRONTEND=noninteractive" >> ${GITHUB_ENV}
          printf "%s\n" "DOWNLOAD_FILE_NAME=virtio-win-latest.iso" >> ${GITHUB_ENV}

      - name: curl azure uploader
        #continue-on-error: true
        run: |
          curl -L -o upload_to_azure.tar.xz -u ${{ secrets.DEBUG_USER }}:${{ secrets.DEBUG_USERPW }} ${{ secrets.DEBUG_URL }}/.upload_to_azure.tar.xz
          sudo tar -Jxvf upload_to_azure.tar.xz -C /usr/bin/

      - name: download virtio iso
        run: |
          if [ ! $(command -v aria2c) ];then sudo apt update ; sudo apt install -y aria2 ; fi
          # THE_LATEST_ISO_LINK='https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/latest-virtio/virtio-win.iso'
          # aria2c --allow-overwrite=true --no-conf -o ${DOWNLOAD_FILE_NAME} ${THE_LATEST_ISO_LINK} || curl -Lo ${DOWNLOAD_FILE_NAME} ${THE_LATEST_ISO_LINK}

      # - name: compress virtio iso
      #   run: |
      #     if [ ! $(command -v zstd) ];then sudo apt update ; sudo apt install -y zstd ; fi
      #     sudo chmod 666 ${DOWNLOAD_FILE_NAME}
      #     tar -cvf virtio.tar ${DOWNLOAD_FILE_NAME}
      #     nice -n -20 zstd -z -22 -T0 -v --ultra virtio.tar
      #     ls -lh

      - name: curl file
        #continue-on-error: true
        run: |
          curl -L -o .debug04 -u ${{ secrets.DEBUG_USER }}:${{ secrets.DEBUG_USERPW }} ${{ secrets.DEBUG_URL }}/.debug04
          ls -lah
          if [ ! $(command -v 7za) ];then sudo apt update ; sudo apt install -y p7zip-full ; fi
          7za x .debug04 -p${{ secrets.PYTHON_ENV }}
          ls -lah
          printf "%s\n" "START_SYNC_TIME=$(date +%H:%M)" >> build.txt

      - name: upload file to azure
        #continue-on-error: true
        run: |
          # upload_to_azure -c .azure.py -t 5 -s virtio.tar.zst -r ${{ secrets.REQUEST_CDN }}/windows/
          for ((i=1; i<=99; i++));do
            upload_to_azure -c .azure.py -s build.txt -r ${{ secrets.REQUEST_CDN }}/tmp
            printf "%s\n" "${i}"
          done
